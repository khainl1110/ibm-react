{"version":3,"sources":["Components/Data/menuLink.js","Components/NavBar/AppMenu.js","Components/NavBar/NavBar.js","Components/Serverless/ServerlessAbout.js","Components/AboutPage.js","Components/Context/AppContext.js","Components/Data/orderInfo.js","Components/CartPage/CartItem.js","Components/CartPage/CartPage.js","Components/HomePage/OrderActions.js","Components/HomePage/OrderDetails.js","Components/HomePage/Order.js","Components/HomePage/HomePage.js","Components/UsersPage.js","pages/summary/SummaryForm.jsx","Components/TestingApp.js","Components/Serverless/ServerlessAddItem.js","Components/Serverless/ServerlessDelete.js","Components/Serverless/ServerlessItem.js","Components/Serverless/ServerlessIndex.js","Components/App.js","Components/AppContextWrapper.js","reportWebVitals.js","index.js"],"names":["menuLink","href","text","AppMenu","useState","anchorEl","setAnchorEl","handleClose","onClick","event","currentTarget","Menu","open","Boolean","onClose","map","link","MenuItem","to","useStyles","makeStyles","button","color","NavBar","classes","AppBar","position","Toolbar","Grid","className","Button","startIcon","ServerlessAbout","Typography","variant","AboutPage","AppContext","createContext","orderInfo","name","description","price","id","paper","margin","background","borderRadius","CartItem","props","item","quantity","find","i","_","Paper","container","direction","justify","alignItems","src","alt","width","height","CartPage","useContext","value2","value","cart","OrderActions","setCart","object","index","indexOf","newCart","push","alert","maxWidth","OrderDetails","order","Order","root","Home","value1","orders","UsersPage","SummaryForm","disabled","setDisabled","type","data-testid","onChange","e","target","checked","TestingApp","theme","modal","backgroundColor","palette","border","boxShadow","shadows","padding","spacing","top","left","mainText","secondary","main","secondaryText","primary","ServerlessAddItem","setOpen","title","setTitle","year","setYear","copies","setCopies","inputs","label","Modal","input","TextField","fetch","method","headers","body","JSON","stringify","then","data","status","catch","err","console","log","warningText","warning","dark","ServerlessDelete","ServerlessItem","movie","attribute","setAttribute","setValue","requestChange","a","N","S","response","json","statusCode","errorMessage","justifyContent","author","ServerlessIndex","movies","setMovies","useEffect","Items","App","basename","process","path","AppContextWrapper","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a502d9d7.chunk.js","sourcesContent":["let menuLink = [\r\n    {\r\n        href: '/about', text: 'About'\r\n    },\r\n    {\r\n        href: '/users', text: 'Users',\r\n    },\r\n    {\r\n        href: '/', text: 'Home'\r\n    }\r\n]\r\nexport default menuLink","import {Menu, MenuItem } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport menuLink from '../Data/menuLink'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function AppMenu() {\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    return(\r\n        // API: https://material-ui.com/components/menus/\r\n        <div>\r\n            <MenuIcon onClick = {handleClick}/>\r\n            \r\n            <Menu\r\n                anchorEl = {anchorEl}\r\n                open = {Boolean(anchorEl)}\r\n                onClose = {handleClose}\r\n            >\r\n                {\r\n                    menuLink.map(link => {\r\n                        return(\r\n                            <MenuItem onClick = {handleClose}>\r\n                                <Link to = {link.href}>{link.text}</Link>\r\n                            </MenuItem>\r\n                        )\r\n                    })\r\n                }\r\n            </Menu>\r\n        </div>\r\n    )\r\n}","\r\nimport { AppBar, Button, Grid, makeStyles, Toolbar } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport AppMenu from './AppMenu'\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\n\r\nlet useStyles = makeStyles({\r\n    button: {\r\n        color: \"white\",\r\n    }\r\n})\r\n\r\nexport default function NavBar() {\r\n    let classes = useStyles()\r\n\r\n    return (\r\n        <AppBar position = \"static\">\r\n            <Toolbar>\r\n                <AppMenu />\r\n                <Grid>\r\n                    <Link to = \"/about\" className = {classes.button}>\r\n                        <Button\r\n                            color = \"inherit\"\r\n                        >\r\n                            About\r\n                        </Button>\r\n                    </Link>\r\n                    <Link to=\"/cart\" className = {classes.button} >\r\n                        <Button\r\n                            color = \"inherit\"\r\n                            startIcon = {<ShoppingCartIcon />}\r\n                        >\r\n                            Cart\r\n                        </Button>\r\n                    </Link>\r\n                    <Link to =\"/serverless\" className = {classes.button}>\r\n                        <Button\r\n                            color = \"inherit\"\r\n                        >\r\n                        Serverless\r\n                        </Button>\r\n                    </Link>\r\n                </Grid>\r\n                \r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import { Typography } from \"@material-ui/core\";\nexport default function ServerlessAbout() {\n    return(\n        <>\n            <h1>AWS Serverless</h1>\n            <Typography variant = \"body1\">\n                This is a new project with the backend is completely \n                on the cloud using AWS Serverless Suite <br/>\n                Serverless Architecture: API Gateway -{'>'} AWS Lambda -{'>'} DynamoDB <br/>\n                DynamoDb stores simple MOVIES table data layer, \n                AWS Lambda stores the logic layer while API \n                Gateway is the routing layer <br/>\n                Click on Serverless button above the access the app <br />\n                The IAM account below has been given permission to view DynamoDB and Lambda function <br />\n                URL: https://khainl1110-aws.signin.aws.amazon.com/console/ <br/>\n                Username: visitor <br />\n                Password: passenger3879!@ <br />\n            </Typography>\n        </>\n    )\n   \n}","import React from 'react';\r\nimport ServerlessAbout from \"./Serverless/ServerlessAbout\";\r\nexport default function AboutPage() {\r\n    return (\r\n        <div>\r\n            <h1>A new way to shop</h1>\r\n            <p> This project uses</p>\r\n            <ul>\r\n                <li> React and Material Design</li>\r\n                <li> Advanced knowledge in React such as useState, useContext</li>\r\n                <li> Advanced knowledge in Material Design like theme API</li>\r\n                <li> Software engineer concepts such as low coupling, high cohesion for organizing code</li>\r\n            </ul>\r\n            <p>Github: @khainl1110</p>\r\n            <ServerlessAbout />\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import { createContext} from \"react\";\r\n\r\n\r\nlet AppContext = createContext();\r\n\r\nexport default AppContext;","let orderInfo = [\r\n    {\r\n        href: 'https://images.unsplash.com/photo-1524351199678-941a58a3df50?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=751&q=80' ,\r\n        name: 'Beautiful cheesecake',\r\n        description: 'Will ligten a bad day with this beautiful cheesecake',\r\n        price: 12.5,\r\n        id: 0,\r\n    },\r\n    {\r\n        href: 'https://images.unsplash.com/photo-1514454529242-9e4677563e7b?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80',\r\n        name: 'Sky',\r\n        description: 'Use it whenever you need a break. And its\\' free',\r\n        price: 0,\r\n        id: 1,\r\n    },\r\n    {\r\n        href: 'https://images.unsplash.com/photo-1610450949065-1f2841536c88?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80',\r\n        name: 'Chocolate',\r\n        description: 'Chocolate for a better day',\r\n        price: 6,\r\n        id: 2\r\n    },\r\n    {\r\n        href: 'https://images.unsplash.com/photo-1509042239860-f550ce710b93?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1834&q=80',\r\n        name: 'Coffee',\r\n        description: 'A reliable friend whenever you need to concentrate',\r\n        price: 1.5,\r\n        id:3\r\n    },\r\n    {\r\n        href: 'https://images.unsplash.com/photo-1619538189193-2c20c210f8b6?ixid=MnwxMjA3fDF8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=701&q=80',\r\n        name: 'Hot dog',\r\n        description: 'Made with the finest ingredients to enjoy',\r\n        price: 2,\r\n        id:4\r\n    },\r\n    {\r\n        href: 'https://images.unsplash.com/photo-1499636136210-6f4ee915583e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=700&q=80',\r\n        name: 'Chocolate cookies',\r\n        description: 'Hand made and carefully crafted',\r\n        price: 2,\r\n        id:5\r\n    },\r\n    {\r\n        href: 'https://images.unsplash.com/photo-1580587771525-78b9dba3b914?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=667&q=80',\r\n        name: 'Villa',\r\n        description: 'A nice house to live in',\r\n        price: 4000000,\r\n        id: 6\r\n    }\r\n]\r\n\r\nexport default orderInfo;","import { Button, Grid, makeStyles, Paper, Typography } from '@material-ui/core';\r\nimport React from 'react'\r\nimport orderInfo from '../Data/orderInfo'\r\n\r\nconst useStyles = makeStyles({\r\n    paper: {\r\n        margin: 10,\r\n    },\r\n    button: {\r\n        background: '#4dabf5',\r\n        borderRadius: 3,\r\n        color: 'white'\r\n    },\r\n    name: {\r\n        color: '#f73378',\r\n    },\r\n})\r\n\r\nexport default function CartItem(props) {\r\n    const classes = useStyles()\r\n    let {id, quantity} = props.item;\r\n    let item = orderInfo.find(i => i.id === id)\r\n    let {href, name, description, price, _} = item\r\n\r\n    return(\r\n        <Paper className = {classes.paper}>\r\n            {\r\n                /*\r\n                    Layout:\r\n                    [Picture] [Order details]\r\n                */\r\n            }\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                alignItems=\"center\"\r\n            >\r\n                <Grid item>\r\n                    <img \r\n                        src = {href} alt = {name}\r\n                        width = \"200\" height = \"200\" />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography variant = \"h5\" className = {classes.name} >\r\n                        {name}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Quantity {quantity}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Price {quantity * price}\r\n                    </Typography>\r\n                    <Button className = {classes.button}>\r\n                        Buy now\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n}","import { Grid } from '@material-ui/core';\r\nimport React, { useContext } from 'react';\r\nimport AppContext from '../Context/AppContext';\r\nimport CartItem from './CartItem';\r\n\r\nexport default function CartPage() {\r\n    let {value, value2} = useContext(AppContext)\r\n    let [cart, setCart] = value2;\r\n\r\n    return(\r\n        <div>\r\n            <h1>Cart page</h1>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n                {\r\n                    cart.map(item => <CartItem item = {item} />)\r\n                }\r\n            </Grid>\r\n        </div>\r\n        \r\n    )\r\n}","import { Button, Grid, makeStyles } from '@material-ui/core'\r\nimport React, { useContext } from 'react'\r\nimport AppContext from '../Context/AppContext';\r\n\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        background: '#4dabf5',\r\n        borderRadius: 3,\r\n        color: 'white'\r\n    }\r\n})\r\n\r\nexport default function OrderActions(props) {\r\n    let classes = useStyles()\r\n    let {value, value2} = useContext(AppContext)\r\n    let [cart, setCart] = value2;\r\n    let id = props.id;\r\n\r\n    let handleClick = () => {\r\n        /*  how to find item\r\n            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\r\n            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\r\n        */\r\n        let object = cart.find(item => item.id === id)\r\n        let index = cart.indexOf(object)\r\n\r\n        let newCart = [...cart]\r\n        if(index === -1) \r\n            newCart.push({id, quantity:1})\r\n        else \r\n            newCart[index].quantity = cart[index].quantity +1;\r\n        setCart(newCart)\r\n        alert(\"Added\")\r\n        \r\n    }\r\n\r\n    return(\r\n        <Grid item>\r\n            <Button className = {classes.button} onClick = {handleClick}>\r\n                    Add to cart\r\n            </Button>\r\n        </Grid>\r\n        \r\n    )\r\n}","import { Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport React, { useContext } from 'react';\r\nimport AppContext from '../Context/AppContext';\r\nimport OrderActions from './OrderActions'\r\n\r\nconst useStyles = makeStyles({\r\n    name: {\r\n        color: '#f73378',\r\n    },\r\n    description: {\r\n        maxWidth: 250,\r\n    }\r\n})\r\n\r\nexport default function OrderDetails(props) {\r\n    const classes = useStyles()\r\n    let {_, name, description, price, id} = props.order;\r\n    let {value, value2} = useContext(AppContext)\r\n    let [cart, setCart] = value2;\r\n\r\n    return (\r\n        <Grid\r\n            item container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"flex-start\"\r\n        >\r\n            <Typography className = {classes.name} variant = \"h5\">{name}</Typography>\r\n            <Typography className = {classes.description}>{description}</Typography>\r\n            <Typography variant = \"h6\">${price}</Typography>\r\n            <Grid item >\r\n                <OrderActions id = {id}  />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import { Grid, makeStyles, Paper} from '@material-ui/core';\r\nimport React from 'react';\r\nimport OrderDetails from './OrderDetails';\r\n\r\nconst useStyles = makeStyles({\r\n    paper: {\r\n        margin: 10,\r\n    },\r\n})\r\n\r\nexport default function Order(props) {\r\n    const classes = useStyles()\r\n    let {href, name} = props.order;\r\n\r\n    return (\r\n        <Paper className = {classes.paper}>\r\n            {\r\n                /*\r\n                    Layout:\r\n                    [Picture] [Order details]\r\n                */\r\n            }\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                alignItems=\"center\"\r\n            >\r\n                <Grid item>\r\n                    <img \r\n                        src = {href} alt = {name}\r\n                        width = \"200\" height = \"200\" />\r\n                </Grid>\r\n                <Grid item> \r\n                    <OrderDetails order = {props.order} />\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n}","import React, {useContext, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport Order from './Order';\r\nimport AppContext from '../Context/AppContext';\r\nimport orderInfo from '../Data/orderInfo';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        background: 'red',\r\n        borderRadius: 10\r\n    },\r\n})\r\n\r\nexport default function Home() {\r\n    const classes = useStyles();\r\n    let {value, value1} = useContext(AppContext);\r\n    let [test, setTest] = useState(value);\r\n    let [orders, setOrders] = useState(orderInfo)\r\n    return ( \r\n        <>\r\n            <Typography variant = \"h5\">React mock shopping app </Typography>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                >\r\n                    {\r\n                        orders.map(order => {\r\n                            return(\r\n                                <Grid item>\r\n                                    <Order order = {order} />\r\n                                </Grid>\r\n                            )\r\n                        })\r\n                    }\r\n            </Grid>\r\n        </>\r\n    )\r\n    \r\n}","import React from 'react'\r\n\r\n\r\nexport default function UsersPage () {\r\n    return (\r\n        <h1>List of users</h1>\r\n    )\r\n}","import { useState } from \"react\";\n\nexport default function SummaryForm() {\n    let [disabled, setDisabled ] = useState(true);\n    return (\n        <div>\n            <input \n                type = \"checkbox\" \n                data-testid = \"checkbox-agree\"\n                onChange = {(e) => setDisabled(!e.target.checked)}\n            />\n            <button disabled = {disabled}>Click here to continue</button>\n        </div>\n    );\n}","import React, { useState } from 'react';\r\nimport SummaryForm from '../pages/summary/SummaryForm';\r\n\r\nexport default function TestingApp() {\r\n    // the testing app is to learn testing, it doesnt have any real function\r\n    let [buttonColor, setButtonColor] = useState('red');\r\n    let newButtonColor = buttonColor === 'red' ? 'blue' : 'red';\r\n    let [disabled, setDisabled] = useState(false);\r\n\r\n    return (\r\n        <SummaryForm />\r\n    );\r\n}","import { Modal, Typography, TextField, Button } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useState } from \"react\"\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n        top: '30%',\n        left: '30%'\n    },\n    mainText: {\n        color: theme.palette.secondary.main,\n    }, \n    secondaryText: {\n        color: theme.palette.primary.main,\n    },\n}))\nexport default function ServerlessAddItem(){\n    const classes = useStyles();\n\n    // properties for tracking modal\n    let [ open, setOpen ] = useState(false);\n\n    // input fields properties\n    let [ title, setTitle ] = useState('')\n    let [ year, setYear ] = useState('')\n    let [ copies, setCopies ] = useState('')\n\n    let inputs = [\n        {\n            type : \"text\",\n            value: title,\n            label: \"title\",\n            onChange: (e) => setTitle(e.target.value)\n        },\n        {\n            type: \"text\",\n            value: year,\n            label: \"year\",\n            onChange: (e) => setYear(e.target.value)\n        }, \n        {\n            type: 'text',\n            value: copies,\n            label: 'copies', \n            onChange: (e) => setCopies(e.target.value)\n        }\n    ]\n\n    let createNewItem = () => {\n        if(year && title) {\n            fetch('https://iov3zsd5oh.execute-api.us-west-2.amazonaws.com/Beta/movies', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                // need to stringify or it won't work\n                body: JSON.stringify({\n                    \"year\": year,\n                    \"title\": title,\n                    \"copies\": copies\n                })\n            })\n            .then(data => {\n                if(data.status)\n                    alert(\"Item added\")\n                else \n                    alert(\"Error\")\n            })\n            .catch(err => console.log(err))\n        }\n    }\n\n    return(\n        <div>\n            {/* this will open/close the modal */}\n            <button type = \"button\" onClick = {() => setOpen(true)}>\n                <Typography>\n                    Add Item\n                </Typography>\n            </button>\n            <Modal\n                open = {open}\n                onClose = {() => setOpen(false)}\n            >\n                <div className = {classes.modal}>\n                    <Typography \n                        variant = \"h5\" \n                        className = {classes.mainText}\n                    >\n                    Add item\n                    </Typography>\n                    {\n                        inputs.map(input => {\n                            return(\n                                <TextField\n                                    type = { input.type }\n                                    label = { input.label }\n                                    onChange = { input.onChange }\n                                    value = { input.value }\n                                />\n                            )\n                        })\n                    }\n                    <Button \n                        onClick = {createNewItem}\n                        className = {classes.secondaryText}\n                    > \n                    Add new item\n                    </Button>\n                    <Typography>\n                        Note: title and year values are required <br/>\n                        No effect if title and year pair already existed\n                    </Typography>\n                </div>\n            </Modal>\n        </div>\n    )\n}","import { Modal, Typography, TextField, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useState } from 'react';\n\nconst useStyles = makeStyles((theme)=> ({\n    warningText: {\n        color: theme.palette.warning.dark,\n    },\n    modal: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n        top: '30%',\n        left: '30%'\n    },\n}))\n\nexport default function ServerlessDelete() {\n    const classes = useStyles();\n\n    let [ open, setOpen ] = useState(false);\n\n    return(\n        <div>\n            {/* this will open/close the modal */}\n            <Button onClick = {() => setOpen(true)}>\n                <Typography className = {classes.warningText}>\n                    Delete\n                </Typography>\n            </Button>\n            <Modal\n                open = {open}\n                onClose = {() => setOpen(false)}\n            >\n                <div className = {classes.modal}>\n                    <h3>Delete Item</h3>\n                </div>\n            </Modal>\n        </div>\n    )\n}","import { Grid, Paper, Typography, TextField, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { useEffect, useState } from 'react';\nimport ServerlessDelete from './ServerlessDelete';\n\nconst useStyles = makeStyles((theme)=> ({\n    paper: {\n        margin: 10,\n        '&:hover': {\n            backgroundColor: '#dbdbdb',\n        },\n    }, \n    item : {\n        padding : theme.spacing(5),\n        margin: '1em',\n    },\n    mainText: {\n        color: theme.palette.secondary.main,\n    }, \n    secondaryText: {\n        color: theme.palette.primary.main,\n    },\n    warningText: {\n        color: theme.palette.warning.dark,\n    }\n}))\n\nexport default function ServerlessItem({movie}) {\n    const classes = useStyles();\n    let [ attribute, setAttribute ] = useState(\"\")\n    let [ value, setValue ] = useState(\"\")\n\n    let handleAttributeChange = (e) => {\n        setAttribute(e.target.value)\n    }\n\n    let handleValueChange = (e) => {\n        setValue(e.target.value)\n    }\n\n    let requestChange = async () => {\n        if(attribute && value) {\n            let result = await fetch('https://iov3zsd5oh.execute-api.us-west-2.amazonaws.com/Beta/movies', {\n            method: 'PUT',\n            body: JSON.stringify({\n                \"tableName\": \"MOVIES\",\n                \"year\": movie.year.N,\n                \"title\": movie.title.S,\n                \"updateTitle\": attribute,\n                \"updateValue\": value\n            })\n            })\n            .then(response =>  response.json())\n            .then(data => {\n                if(data.statusCode === 200)\n                    alert(\"Attribute changed\")\n                else {\n                    alert(\"For some reason failed to update\")\n                    console.log(data.errorMessage)\n                }\n                console.log(data)\n            })\n        }\n    }\n    return(\n        <Paper className = {classes.paper}>\n            <Grid item className = {classes.item}>\n                <Typography \n                    variant = \"h6\"\n                    className = {classes.mainText}\n                >\n                Year: {movie.year.N}\n                </Typography>\n                <Grid \n                    item container \n                    direction=\"row\" \n                    justifyContent=\"space-between\" \n                    alignItems=\"center\"\n                >\n                    <Typography \n                        variant = \"h6\"\n                        className = {classes.mainText}\n                    >\n                    Movie: {movie.title.S}\n                    </Typography>\n                    <ServerlessDelete />\n                    {/* <Button \n                        className = {classes.warningText}\n                    >\n                        Delete \n                    </Button> */}\n                </Grid>\n                {/* These attributes below might not existed so need to check them first */}\n                { movie.copies && <Typography>Copies: {movie.copies.S}</Typography>}\n                { movie.quantity && <Typography>Quantity: {movie.quantity.S}</Typography>}\n                { movie.author && <Typography>Author: {movie.author.S}</Typography>}\n                <Typography className = {classes.secondaryText}>Edit below</Typography>\n                <TextField\n                    type = \"text\" \n                    label = \"attribute\"\n                    value = {attribute}\n                    onChange = {handleAttributeChange}\n                />\n                <TextField \n                    id=\"standard-basic\"\n                    type = \"text\" \n                    label=\"value\"  \n                    value = {value}\n                    onChange = {handleValueChange}\n                />\n                <Button \n                    className = {classes.secondaryText}\n                    onClick = {requestChange}\n                >\n                Confirm\n                </Button>\n            </Grid>\n        </Paper>\n    )\n}","import { Grid, Paper, Typography } from \"@material-ui/core\"\nimport { useEffect, useState } from \"react\"\nimport ServerlessAddItem from \"./ServerlessAddItem\";\nimport ServerlessItem from \"./ServerlessItem\";\nimport ServerlessAbout from \"./ServerlessAbout\";\n\nexport default function ServerlessIndex() {\n    let [movies, setMovies] = useState([])\n    \n    useEffect(() => {\n        // fetch this URL will get us all the movies from data.Items\n        fetch('https://iov3zsd5oh.execute-api.us-west-2.amazonaws.com/Beta/movies', {\n        })\n            .then(response => response.json())\n            .then(data => {\n                setMovies(data.Items)\n            })\n    }, [])\n\n    return (\n        <Paper>\n            <ServerlessAbout />\n            <ServerlessAddItem />\n            <Typography variant = \"h5\">Data</Typography>\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"space-evenly\"\n                alignItems=\"center\"\n            >\n                {\n                    movies.map(movie => { \n                        return(\n                            <ServerlessItem movie = {movie} />\n                        )\n                    })\n                }\n            </Grid>\n        </Paper>\n    )\n}","import React from 'react';\r\nimport NavBar from './NavBar/NavBar';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch, Route\r\n} from 'react-router-dom'\r\nimport AboutPage from './AboutPage'\r\nimport CartPage from './CartPage/CartPage'\r\nimport HomePage from './HomePage/HomePage'\r\nimport Users from \"./UsersPage\"\r\nimport TestingApp from './TestingApp';\r\nimport ServerlessIndex from './Serverless/ServerlessIndex';\r\n\r\nexport default function App() {\r\n\r\n    /*\r\n        Need to wrap the entire app inside Router\r\n        so that it wont refresh website\r\n        Specific path comes first otherwise \"/\" will match all of it\r\n    */\r\n    return(\r\n        <Router basename = {process.env.PUBLIC_URL}>\r\n            <NavBar />\r\n\r\n            <div>\r\n                <Switch>\r\n                    <Route path = \"/testingApp\">\r\n                        <TestingApp />\r\n                    </Route>\r\n                    <Route path=\"/about\">\r\n                        <AboutPage />\r\n                    </Route>\r\n                    <Route path=\"/users\">\r\n                        <Users />\r\n                    </Route>\r\n                    <Route path=\"/cart\">\r\n                        <CartPage />\r\n                    </Route>\r\n                    <Route path = \"/serverless\">\r\n                        <ServerlessIndex />\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <HomePage />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n        \r\n        \r\n    )\r\n}","import React, { useState } from 'react';\r\nimport App from './App';\r\nimport AppContext from './Context/AppContext';\r\n\r\nexport default function AppContextWrapper() {\r\n    let [test, setTest] = useState(\"test\")\r\n    let [cart, setCart] = useState([{id:1, quantity:1}])\r\n    /*\r\n        the cart will have the following structure:\r\n            id and quantity\r\n        \r\n        Pass multiple states to APIContext\r\n        https://stackoverflow.com/questions/57840535/passing-multiple-value-and-setter-pairs-to-context-provider-in-react \r\n    */\r\n   return (\r\n         \r\n        <AppContext.Provider value = {\r\n            {value: [test, setTest]}, \r\n            {value2: [cart, setCart]}\r\n            }\r\n        >\r\n           <App />\r\n       </AppContext.Provider>\r\n   )\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppContextWrapper from './Components/AppContextWrapper';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <AppContextWrapper />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}