{"version":3,"sources":["Components/Data/menuLink.js","Components/NavBar/AppMenu.js","Components/NavBar/NavBar.js","Components/Serverless/ServerlessAbout.js","Components/AboutPage.js","Components/Context/AppContext.js","Components/Data/orderInfo.js","Components/CartPage/CartItem.js","Components/CartPage/CartPage.js","Components/HomePage/OrderActions.js","Components/HomePage/OrderDetails.js","Components/HomePage/Order.js","Components/HomePage/HomePage.js","Components/UsersPage.js","pages/summary/SummaryForm.jsx","Components/TestingApp.js","Components/Serverless/ServerlessAddItem.js","Components/Serverless/ServerlessDelete.js","Components/Serverless/ServerlessItem.js","Components/Serverless/ServerlessArchitecture.jsx","Components/Serverless/ServerlessIndex.js","Components/Thoughts.jsx","Components/App.js","Components/AppContextWrapper.js","reportWebVitals.js","index.js"],"names":["menuLink","href","text","AppMenu","_useState","useState","_useState2","_slicedToArray","anchorEl","setAnchorEl","handleClose","_jsxs","children","_jsx","MenuIcon","onClick","event","currentTarget","Menu","open","Boolean","onClose","map","link","MenuItem","Link","to","useStyles","makeStyles","button","color","NavBar","classes","AppBar","position","Toolbar","Grid","className","Button","startIcon","ShoppingCartIcon","theme","warningText","ServerlessAbout","_Fragment","Typography","variant","AboutPage","List","ListItem","ListItemText","AppContext","createContext","orderInfo","name","description","price","id","paper","margin","background","borderRadius","CartItem","props","_props$item","item","quantity","find","i","_","Paper","container","direction","justify","alignItems","src","alt","width","height","CartPage","_useContext","useContext","value2","value","_value","cart","OrderActions","setCart","object","index","indexOf","newCart","_toConsumableArray","push","alert","maxWidth","OrderDetails","_props$order","order","Order","root","Home","value1","_useState3","_useState4","orders","UsersPage","SummaryForm","disabled","setDisabled","type","onChange","e","target","checked","TestingApp","modal","backgroundColor","palette","border","boxShadow","shadows","padding","spacing","top","left","mainText","secondary","main","secondaryText","primary","ServerlessAddItem","_ref","reloadData","setOpen","title","setTitle","_useState5","_useState6","year","setYear","_useState7","_useState8","copies","setCopies","_useState9","_useState10","selectedFile","setSelectedFile","inputs","label","createNewItem","uploadFile","fetch","method","headers","body","JSON","stringify","then","data","status","catch","err","console","log","file","axios","post","res","put","result","Modal","input","TextField","component","files","warning","dark","ServerlessDelete","movie","deleteItem","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","N","S","response","stop","apply","arguments","justifyContent","DoneIcon","CloseIcon","ServerlessItem","attribute","setAttribute","setValue","requestChange","errorMessage","avatarFileName","String","author","ServerlessThought","ServerlessIndex","movies","setMovies","reload","setReload","doneLoading","setDoneLoading","useEffect","json","Items","AutorenewIcon","ServerlessArchitecture","Thoughts","App","Router","basename","process","Switch","Route","path","Users","HomePage","AppContextWrapper","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7805a197.chunk.js","sourcesContent":["let menuLink = [\r\n    {\r\n        href: '/about', text: 'About'\r\n    },\r\n    {\r\n        href: '/users', text: 'Users',\r\n    },\r\n    {\r\n        href: '/', text: 'Home'\r\n    }\r\n]\r\nexport default menuLink","import {Menu, MenuItem } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport menuLink from '../Data/menuLink'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function AppMenu() {\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    return(\r\n        // API: https://material-ui.com/components/menus/\r\n        <div>\r\n            <MenuIcon onClick = {handleClick}/>\r\n            \r\n            <Menu\r\n                anchorEl = {anchorEl}\r\n                open = {Boolean(anchorEl)}\r\n                onClose = {handleClose}\r\n            >\r\n                {\r\n                    menuLink.map(link => {\r\n                        return(\r\n                            <MenuItem onClick = {handleClose}>\r\n                                <Link to = {link.href}>{link.text}</Link>\r\n                            </MenuItem>\r\n                        )\r\n                    })\r\n                }\r\n            </Menu>\r\n        </div>\r\n    )\r\n}","\r\nimport { AppBar, Button, Grid, makeStyles, Toolbar } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport AppMenu from './AppMenu'\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\n\r\nlet useStyles = makeStyles({\r\n    button: {\r\n        color: \"white\",\r\n    }\r\n})\r\n\r\nexport default function NavBar() {\r\n    let classes = useStyles()\r\n\r\n    return (\r\n        <AppBar position = \"static\">\r\n            <Toolbar>\r\n                <AppMenu />\r\n                <Grid>\r\n                    <Link to = \"/about\" className = {classes.button}>\r\n                        <Button\r\n                            color = \"inherit\"\r\n                        >\r\n                            About\r\n                        </Button>\r\n                    </Link>\r\n                    <Link to=\"/cart\" className = {classes.button} >\r\n                        <Button\r\n                            color = \"inherit\"\r\n                            startIcon = {<ShoppingCartIcon />}\r\n                        >\r\n                            Cart\r\n                        </Button>\r\n                    </Link>\r\n                    <Link to =\"/serverless\" className = {classes.button}>\r\n                        <Button\r\n                            color = \"inherit\"\r\n                        >\r\n                        Serverless\r\n                        </Button>\r\n                    </Link>\r\n                    <Link to = \"/thoughts\" className = {classes.button}>\r\n                        <Button \r\n                            color = \"inherit\"\r\n                        >\r\n                            Thoughts\r\n                        </Button>\r\n                    </Link>\r\n                </Grid>\r\n                \r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme)=> ({\r\n    warningText: {\r\n        color: \"#ff0000\",   \r\n    },\r\n}))\r\n\r\nexport default function ServerlessAbout() {\r\n    const classes = useStyles();\r\n    return(\r\n        <>\r\n            <Typography variant = \"h3\">AWS Serverless</Typography>\r\n            <Typography variant = \"body1\">\r\n                This is a new project with the backend is completely \r\n                on the cloud using AWS Serverless Suite and images are stored in S3 bucket <br/>\r\n                Serverless Architecture: API Gateway -{'>'} AWS Lambda -{'>'} DynamoDB and S3<br/>\r\n                DynamoDb stores simple MOVIES table data layer, \r\n                AWS Lambda stores the logic layer while API \r\n                Gateway is the routing layer <br/>\r\n                And S3 is for file storage <br />\r\n                Click on Serverless button above the access the app <br />\r\n                {/* The IAM account below has been given permission to view DynamoDB and Lambda function <br />\r\n                <b>\r\n                URL: https://khainl1110-aws.signin.aws.amazon.com/console/ <br/>\r\n                Username: visitor <br />\r\n                Password: passenger3879!@ <br />\r\n                Choose us-west-2 region <br />\r\n                </b> */}\r\n            </Typography>\r\n            <Typography className = {classes.warningText}>\r\n                Because of how each values has different keys, adding new properties will work but will not display on the frontend<br/>\r\n                I haven't really figured out how to loop through object keys to display all properties<br />\r\n            </Typography>\r\n        </>\r\n    )\r\n   \r\n}","import { Typography, ListItem, ListItemText, List } from '@material-ui/core';\r\nimport ServerlessAbout from \"./Serverless/ServerlessAbout\";\r\nexport default function AboutPage() {\r\n    return (\r\n        <div>\r\n            <Typography variant = \"h6\">\r\n                About me: International student pursuing BS Software Engineer at SJSU '23 <br />\r\n                Like technologies in general, currently learning about cloud and security <br />\r\n                Feel free to connect by any means and talk! <br />\r\n                Click on Thoughts section to see my what I think about some technologies I learn <br/>\r\n                <a href =\"https://linkedin.com/in/khai-nguyen-b59503106/\">LinkedIn </a>\r\n                Email: khainl1110@gmail.com\r\n                (612) 743-6850\r\n            </Typography>\r\n            <Typography variant = \"h3\">A new way to shop</Typography>\r\n            <Typography> This project uses</Typography>\r\n\r\n            <List>\r\n                <ListItem>\r\n                    <ListItemText>\r\n                        React and Material Design\r\n                    </ListItemText>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <ListItemText>\r\n                        Advanced knowledge in React such as useState, useContext\r\n                    </ListItemText>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <ListItemText>\r\n                        Advanced knowledge in Material Design like theme API\r\n                    </ListItemText>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <ListItemText>\r\n                        Software engineer concepts such as low coupling, high cohesion for organizing code\r\n                    </ListItemText>\r\n                </ListItem>\r\n            </List>\r\n            <Typography>Github: @khainl1110</Typography>\r\n            <ServerlessAbout />\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import { createContext} from \"react\";\r\n\r\n\r\nlet AppContext = createContext();\r\n\r\nexport default AppContext;","let orderInfo = [\r\n    {\r\n        href: 'https://images.unsplash.com/photo-1524351199678-941a58a3df50?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=751&q=80' ,\r\n        name: 'Beautiful cheesecake',\r\n        description: 'Will ligten a bad day with this beautiful cheesecake',\r\n        price: 12.5,\r\n        id: 0,\r\n    },\r\n    {\r\n        href: 'https://images.unsplash.com/photo-1514454529242-9e4677563e7b?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80',\r\n        name: 'Sky',\r\n        description: 'Use it whenever you need a break. And its\\' free',\r\n        price: 0,\r\n        id: 1,\r\n    },\r\n    {\r\n        href: 'https://images.unsplash.com/photo-1610450949065-1f2841536c88?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80',\r\n        name: 'Chocolate',\r\n        description: 'Chocolate for a better day',\r\n        price: 6,\r\n        id: 2\r\n    },\r\n    {\r\n        href: 'https://images.unsplash.com/photo-1509042239860-f550ce710b93?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1834&q=80',\r\n        name: 'Coffee',\r\n        description: 'A reliable friend whenever you need to concentrate',\r\n        price: 1.5,\r\n        id:3\r\n    },\r\n    {\r\n        href: 'https://images.unsplash.com/photo-1619538189193-2c20c210f8b6?ixid=MnwxMjA3fDF8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=701&q=80',\r\n        name: 'Hot dog',\r\n        description: 'Made with the finest ingredients to enjoy',\r\n        price: 2,\r\n        id:4\r\n    },\r\n    {\r\n        href: 'https://images.unsplash.com/photo-1499636136210-6f4ee915583e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=700&q=80',\r\n        name: 'Chocolate cookies',\r\n        description: 'Hand made and carefully crafted',\r\n        price: 2,\r\n        id:5\r\n    },\r\n    {\r\n        href: 'https://images.unsplash.com/photo-1580587771525-78b9dba3b914?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=667&q=80',\r\n        name: 'Villa',\r\n        description: 'A nice house to live in',\r\n        price: 4000000,\r\n        id: 6\r\n    }\r\n]\r\n\r\nexport default orderInfo;","import { Button, Grid, makeStyles, Paper, Typography } from '@material-ui/core';\r\nimport React from 'react'\r\nimport orderInfo from '../Data/orderInfo'\r\n\r\nconst useStyles = makeStyles({\r\n    paper: {\r\n        margin: 10,\r\n    },\r\n    button: {\r\n        background: '#4dabf5',\r\n        borderRadius: 3,\r\n        color: 'white'\r\n    },\r\n    name: {\r\n        color: '#f73378',\r\n    },\r\n})\r\n\r\nexport default function CartItem(props) {\r\n    const classes = useStyles()\r\n    let {id, quantity} = props.item;\r\n    let item = orderInfo.find(i => i.id === id)\r\n    let {href, name, description, price, _} = item\r\n\r\n    return(\r\n        <Paper className = {classes.paper}>\r\n            {\r\n                /*\r\n                    Layout:\r\n                    [Picture] [Order details]\r\n                */\r\n            }\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                alignItems=\"center\"\r\n            >\r\n                <Grid item>\r\n                    <img \r\n                        src = {href} alt = {name}\r\n                        width = \"200\" height = \"200\" />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography variant = \"h5\" className = {classes.name} >\r\n                        {name}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Quantity {quantity}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Price {quantity * price}\r\n                    </Typography>\r\n                    <Button className = {classes.button}>\r\n                        Buy now\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n}","import { Grid } from '@material-ui/core';\r\nimport React, { useContext } from 'react';\r\nimport AppContext from '../Context/AppContext';\r\nimport CartItem from './CartItem';\r\n\r\nexport default function CartPage() {\r\n    let {value, value2} = useContext(AppContext)\r\n    let [cart, setCart] = value2;\r\n\r\n    return(\r\n        <div>\r\n            <h1>Cart page</h1>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n                {\r\n                    cart.map(item => <CartItem item = {item} />)\r\n                }\r\n            </Grid>\r\n        </div>\r\n        \r\n    )\r\n}","import { Button, Grid, makeStyles } from '@material-ui/core'\r\nimport React, { useContext } from 'react'\r\nimport AppContext from '../Context/AppContext';\r\n\r\nconst useStyles = makeStyles({\r\n    button: {\r\n        background: '#4dabf5',\r\n        borderRadius: 3,\r\n        color: 'white'\r\n    }\r\n})\r\n\r\nexport default function OrderActions(props) {\r\n    let classes = useStyles()\r\n    let {value, value2} = useContext(AppContext)\r\n    let [cart, setCart] = value2;\r\n    let id = props.id;\r\n\r\n    let handleClick = () => {\r\n        /*  how to find item\r\n            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\r\n            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\r\n        */\r\n        let object = cart.find(item => item.id === id)\r\n        let index = cart.indexOf(object)\r\n\r\n        let newCart = [...cart]\r\n        if(index === -1) \r\n            newCart.push({id, quantity:1})\r\n        else \r\n            newCart[index].quantity = cart[index].quantity +1;\r\n        setCart(newCart)\r\n        alert(\"Added\")\r\n        \r\n    }\r\n\r\n    return(\r\n        <Grid item>\r\n            <Button className = {classes.button} onClick = {handleClick}>\r\n                    Add to cart\r\n            </Button>\r\n        </Grid>\r\n        \r\n    )\r\n}","import { Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport React, { useContext } from 'react';\r\nimport AppContext from '../Context/AppContext';\r\nimport OrderActions from './OrderActions'\r\n\r\nconst useStyles = makeStyles({\r\n    name: {\r\n        color: '#f73378',\r\n    },\r\n    description: {\r\n        maxWidth: 250,\r\n    }\r\n})\r\n\r\nexport default function OrderDetails(props) {\r\n    const classes = useStyles()\r\n    let {_, name, description, price, id} = props.order;\r\n    let {value, value2} = useContext(AppContext)\r\n    let [cart, setCart] = value2;\r\n\r\n    return (\r\n        <Grid\r\n            item container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"flex-start\"\r\n        >\r\n            <Typography className = {classes.name} variant = \"h5\">{name}</Typography>\r\n            <Typography className = {classes.description}>{description}</Typography>\r\n            <Typography variant = \"h6\">${price}</Typography>\r\n            <Grid item >\r\n                <OrderActions id = {id}  />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import { Grid, makeStyles, Paper} from '@material-ui/core';\r\nimport React from 'react';\r\nimport OrderDetails from './OrderDetails';\r\n\r\nconst useStyles = makeStyles({\r\n    paper: {\r\n        margin: 10,\r\n    },\r\n})\r\n\r\nexport default function Order(props) {\r\n    const classes = useStyles()\r\n    let {href, name} = props.order;\r\n\r\n    return (\r\n        <Paper className = {classes.paper}>\r\n            {\r\n                /*\r\n                    Layout:\r\n                    [Picture] [Order details]\r\n                */\r\n            }\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                alignItems=\"center\"\r\n            >\r\n                <Grid item>\r\n                    <img \r\n                        src = {href} alt = {name}\r\n                        width = \"200\" height = \"200\" />\r\n                </Grid>\r\n                <Grid item> \r\n                    <OrderDetails order = {props.order} />\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n}","import React, {useContext, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport Order from './Order';\r\nimport AppContext from '../Context/AppContext';\r\nimport orderInfo from '../Data/orderInfo';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        background: 'red',\r\n        borderRadius: 10\r\n    },\r\n})\r\n\r\nexport default function Home() {\r\n    const classes = useStyles();\r\n    let {value, value1} = useContext(AppContext);\r\n    let [test, setTest] = useState(value);\r\n    let [orders, setOrders] = useState(orderInfo)\r\n    return ( \r\n        <>\r\n            <Typography variant = \"h5\">React mock shopping app </Typography>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                >\r\n                    {\r\n                        orders.map(order => {\r\n                            return(\r\n                                <Grid item>\r\n                                    <Order order = {order} />\r\n                                </Grid>\r\n                            )\r\n                        })\r\n                    }\r\n            </Grid>\r\n        </>\r\n    )\r\n    \r\n}","import React from 'react'\r\n\r\n\r\nexport default function UsersPage () {\r\n    return (\r\n        <h1>List of users</h1>\r\n    )\r\n}","import { useState } from \"react\";\r\n\r\nexport default function SummaryForm() {\r\n    let [disabled, setDisabled ] = useState(true);\r\n    return (\r\n        <div>\r\n            <input \r\n                type = \"checkbox\" \r\n                data-testid = \"checkbox-agree\"\r\n                onChange = {(e) => setDisabled(!e.target.checked)}\r\n            />\r\n            <button disabled = {disabled}>Click here to continue</button>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport SummaryForm from '../pages/summary/SummaryForm';\r\n\r\nexport default function TestingApp() {\r\n    // the testing app is to learn testing, it doesnt have any real function\r\n    let [buttonColor, setButtonColor] = useState('red');\r\n    let newButtonColor = buttonColor === 'red' ? 'blue' : 'red';\r\n    let [disabled, setDisabled] = useState(false);\r\n\r\n    return (\r\n        <SummaryForm />\r\n    );\r\n}","import { Modal, Typography, TextField, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useState, useRef } from \"react\";\r\nimport S3 from \"react-aws-s3\";\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        top: '30%',\r\n        left: '30%'\r\n    },\r\n    mainText: {\r\n        color: theme.palette.secondary.main,\r\n    }, \r\n    secondaryText: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n    \r\n}))\r\nexport default function ServerlessAddItem({reloadData}){\r\n    const classes = useStyles();\r\n\r\n    // properties for tracking modal\r\n    let [ open, setOpen ] = useState(false);\r\n\r\n    // input fields properties\r\n    let [ title, setTitle ] = useState('')\r\n    let [ year, setYear ] = useState('')\r\n    let [ copies, setCopies ] = useState('')\r\n\r\n    // file input for uploading\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n    // input form\r\n    let inputs = [\r\n        {\r\n            type : \"text\",\r\n            value: title,\r\n            label: \"title\",\r\n            onChange: (e) => setTitle(e.target.value)\r\n        },\r\n        {\r\n            type: \"text\",\r\n            value: year,\r\n            label: \"year\",\r\n            onChange: (e) => setYear(e.target.value)\r\n        }, \r\n        {\r\n            type: 'text',\r\n            value: copies,\r\n            label: 'copies', \r\n            onChange: (e) => setCopies(e.target.value)\r\n        },\r\n    ]\r\n    const handleFileInput = (e) => setSelectedFile(e.target.files[0]);\r\n\r\n    let controlCreateNewItem = () => {\r\n        createNewItem();\r\n    }\r\n    let createNewItem = () => {\r\n        uploadFile(selectedFile);\r\n\r\n        if(year && title) {\r\n            fetch('https://iov3zsd5oh.execute-api.us-west-2.amazonaws.com/Beta/movies', {\r\n                method: 'POST',\r\n                // need headers otherwise it won't accept\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                // need to stringify or it won't work\r\n                body: JSON.stringify({\r\n                    \"year\": year,\r\n                    \"title\": title,\r\n                    \"copies\": copies,\r\n                    \"avatarFileName\": selectedFile.name\r\n                })\r\n            })\r\n            .then(data => {\r\n                if(data.status === 200) {\r\n                    reloadData()\r\n                    setTitle('')\r\n                    setYear('')\r\n                    setCopies('')\r\n                    setOpen(false)\r\n                }\r\n                else \r\n                    alert(\"Error\")\r\n            })\r\n            .catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n    // for when adding new movies without pictures, still working on it\r\n    let createNewItemWithoutFile = () => {\r\n        if(year && title) {\r\n            fetch('https://iov3zsd5oh.execute-api.us-west-2.amazonaws.com/Beta/movies', {\r\n                method: 'POST',\r\n                // need headers otherwise it won't accept\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                // need to stringify or it won't work\r\n                body: JSON.stringify({\r\n                    \"year\": year,\r\n                    \"title\": title,\r\n                    \"copies\": copies,\r\n                    \"avatarFileName\": null // cannot have null, but other value this will have bugs\r\n                })\r\n            })\r\n            .then(data => {\r\n                if(data.status === 200) {\r\n                    reloadData()\r\n                    setTitle('')\r\n                    setYear('')\r\n                    setCopies('')\r\n                    setOpen(false)\r\n                }\r\n                else \r\n                    alert(\"Error\")\r\n            })\r\n            .catch(err => console.log(err))\r\n        }\r\n    }\r\n    // to upload file\r\n    let uploadFile = (file) => {\r\n        axios.post('https://iov3zsd5oh.execute-api.us-west-2.amazonaws.com/Beta/testS3', {\r\n            \"bucket\":\"khainl1110-serverless\",\r\n            \"key\": \"images/avatar/\" +file.name,\r\n            \"fileType\": file.type\r\n        })\r\n        .then(res => {\r\n            console.log(res)\r\n            console.log(res.data.link)\r\n            axios.put(res.data.link,file)\r\n            .then(result => console.log(result))\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Button \r\n                href = \"#architecture\"  \r\n                className = {classes.secondaryText}\r\n            >\r\n                <Typography>\r\n                    Go to architecture\r\n                </Typography>\r\n            </Button>\r\n            {/* this will open/close the modal */}\r\n            <Button \r\n                type = \"button\" \r\n                onClick = {() => setOpen(true)}\r\n                className = {classes.secondaryText}\r\n            >\r\n                <Typography>\r\n                    Add Item\r\n                </Typography>\r\n            </Button>\r\n            <Modal\r\n                open = {open}\r\n                onClose = {() => setOpen(false)}\r\n            >\r\n                <div className = {classes.modal}>\r\n                    <Typography \r\n                        variant = \"h5\" \r\n                        className = {classes.mainText}\r\n                    >\r\n                    Add item\r\n                    </Typography>\r\n                    {\r\n                        inputs.map(input => {\r\n                            return(\r\n                                <TextField\r\n                                    type = { input.type }\r\n                                    label = { input.label }\r\n                                    onChange = { input.onChange }\r\n                                    value = { input.value }\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                    <Typography \r\n                        variant = \"h6\" \r\n                        className = {classes.mainText}\r\n                    >\r\n                        Movie avatar\r\n                    </Typography>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        component=\"label\"\r\n                    >\r\n                        Upload File\r\n                        <input type=\"file\" onChange={handleFileInput}/>\r\n                    </Button>\r\n                    <Button \r\n                        onClick = {controlCreateNewItem}\r\n                        className = {classes.secondaryText}\r\n                    > \r\n                    Add new item\r\n                    </Button>\r\n                    <Typography>\r\n                        Note: title and year values are required <br/>\r\n                        No effect if title and year pair already existed <br/>\r\n                        <b> Right now needs to upload a image to work as well </b> <br/>\r\n                        <b> Image name should not have any space in between </b>\r\n                    </Typography>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}","import { Modal, Typography, TextField, Button, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useState } from 'react';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles((theme)=> ({\r\n    mainText: {\r\n        color: theme.palette.secondary.main,\r\n    }, \r\n    secondaryText: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n    warningText: {\r\n        color: theme.palette.warning.dark,\r\n    },\r\n    modal: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        top: '30%',\r\n        left: '30%'\r\n    },\r\n}))\r\n\r\nexport default function ServerlessDelete({movie, reloadData}) {\r\n    const classes = useStyles();\r\n\r\n    let [ open, setOpen ] = useState(false);\r\n\r\n    let deleteItem = async () => {\r\n        await fetch('https://iov3zsd5oh.execute-api.us-west-2.amazonaws.com/Beta/movies', {\r\n        method: 'DELETE',\r\n        body: JSON.stringify({\r\n            \"tableName\": \"MOVIES\",\r\n            \"year\": movie.year.N,\r\n            \"title\": movie.title.S\r\n        })\r\n        })\r\n        .then(response => {\r\n            if(response.status !== 200)\r\n                alert(\"Error deleting item\")\r\n            setOpen(false);\r\n            reloadData()\r\n        })\r\n    }\r\n    return(\r\n        <div>\r\n            {/* this will open/close the modal */}\r\n            <Button onClick = {() => setOpen(true)}>\r\n                <Typography className = {classes.warningText}>\r\n                    Delete\r\n                </Typography>\r\n            </Button>\r\n            <Modal\r\n                open = {open}\r\n                onClose = {() => setOpen(false)}\r\n            >\r\n                <div className = {classes.modal}>\r\n                    <Typography variant = \"h6\">\r\n                        Delete Item ?\r\n                    </Typography>\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justifyContent=\"space-between\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                    <Button\r\n                        startIcon = {<DoneIcon />}\r\n                        className = {classes.mainText}\r\n                        onClick = {deleteItem}\r\n                    >\r\n                        <Typography>\r\n                            Yes\r\n                        </Typography>\r\n                    </Button>\r\n                    <Button\r\n                        startIcon = {<CloseIcon />}\r\n                        className = {classes.secondaryText}\r\n                        onClick = {() => setOpen(false)}\r\n                    >\r\n                        <Typography>\r\n                            No\r\n                        </Typography>\r\n                    </Button>\r\n                    </Grid>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}","import { Grid, Paper, Typography, TextField, Button, CardMedia } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { useEffect, useState } from 'react';\r\nimport ServerlessDelete from './ServerlessDelete';\r\n\r\nconst useStyles = makeStyles((theme)=> ({\r\n    paper: {\r\n        margin: 10,\r\n        '&:hover': {\r\n            backgroundColor: '#dbdbdb',\r\n        },\r\n    }, \r\n    item : {\r\n        padding : theme.spacing(5),\r\n        margin: '1em',\r\n    },\r\n    mainText: {\r\n        color: theme.palette.secondary.main,\r\n    }, \r\n    secondaryText: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n    warningText: {\r\n        color: theme.palette.warning.dark,\r\n    }\r\n}))\r\n\r\nexport default function ServerlessItem({ movie, reloadData }) {\r\n    const classes = useStyles();\r\n    let [ attribute, setAttribute ] = useState(\"\")\r\n    let [ value, setValue ] = useState(\"\")\r\n\r\n    let [ keys, setKeys ] = useState([])\r\n\r\n    // state to store avatar\r\n\r\n    // working to loop through every key in object\r\n    // still in progress\r\n    // useEffect(()=> {\r\n    //     const keys = Object.keys(movie);\r\n    //     // keys.forEach((key, index) => {\r\n    //     //     console.log(key + \" and \" + index);\r\n    //     // }) \r\n    //     setKeys(keys);\r\n    // }, [])\r\n\r\n    let handleAttributeChange = (e) => {\r\n        setAttribute(e.target.value)\r\n    }\r\n\r\n    let handleValueChange = (e) => {\r\n        setValue(e.target.value)\r\n    }\r\n\r\n    let requestChange = async () => {\r\n        if(attribute && value) {\r\n            await fetch('https://iov3zsd5oh.execute-api.us-west-2.amazonaws.com/Beta/movies', {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                \"tableName\": \"MOVIES\",\r\n                \"year\": movie.year.N,\r\n                \"title\": movie.title.S,\r\n                \"updateTitle\": attribute,\r\n                \"updateValue\": value\r\n            })\r\n            })\r\n            .then(data => {\r\n                if(data.status !== 200)\r\n                    alert(data.errorMessage)\r\n                else \r\n                    reloadData()\r\n            })\r\n        }\r\n    }\r\n    return(\r\n        <Paper className = {classes.paper}>\r\n            <Grid item className = {classes.item}>\r\n                <Grid \r\n                    item container \r\n                    direction=\"row\" \r\n                    justifyContent=\"space-between\" \r\n                    alignItems=\"center\"\r\n                >\r\n                    { movie.avatarFileName && <img width = \"100\" height = \"100\"\r\n                    src = {new String('https://khainl1110-serverless.s3.us-west-2.amazonaws.com/images/avatar/' + movie.avatarFileName.S)}\r\n                    />\r\n                    }\r\n                    <Grid item>\r\n                        <Typography \r\n                            variant = \"h6\"\r\n                            className = {classes.mainText}\r\n                        >\r\n                        year: {movie.year.N}\r\n                        </Typography>\r\n                        <Grid \r\n                            item container \r\n                            direction=\"row\" \r\n                            justifyContent=\"space-between\" \r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Typography \r\n                                variant = \"h6\"\r\n                                className = {classes.mainText}\r\n                            >\r\n                            movie: {movie.title.S}\r\n                            </Typography>\r\n                            {/* passing props around here, might be able to improve */}\r\n                            <ServerlessDelete movie = {movie} reloadData = {reloadData}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                {/* These attributes below might not existed so need to check them first */}\r\n                { movie.copies && <Typography>copies: {movie.copies.S}</Typography>}\r\n                { movie.quantity && <Typography>quantity: {movie.quantity.S}</Typography>}\r\n                { movie.author && <Typography>author: {movie.author.S}</Typography>}\r\n                <Typography className = {classes.secondaryText}>Edit below</Typography>\r\n                <TextField\r\n                    type = \"text\" \r\n                    label = \"attribute\"\r\n                    value = {attribute}\r\n                    onChange = {handleAttributeChange}\r\n                />\r\n                <TextField \r\n                    id=\"standard-basic\"\r\n                    type = \"text\" \r\n                    label=\"value\"  \r\n                    value = {value}\r\n                    onChange = {handleValueChange}\r\n                />\r\n                <Button \r\n                    className = {classes.secondaryText}\r\n                    onClick = {requestChange}\r\n                >\r\n                Confirm\r\n                </Button>\r\n                <Typography>\r\n                    Can only change values that are not part of key (Year, Movie) <br />\r\n                    For ex, copies, quantity, author <br />\r\n                    No capitalize first word to match the database rows\r\n                </Typography>\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n}","import { Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainText: {\r\n        color: theme.palette.secondary.main,\r\n    }, \r\n    secondaryText: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n    \r\n}))\r\n\r\nexport default function ServerlessThought() {\r\n    const classes = useStyles();\r\n    return(\r\n        <div id = \"architecture\">\r\n            <Typography variant = \"h3\">\r\n                App Architecture\r\n            </Typography>\r\n            <Typography variant = \"body2\">\r\n                <span className = {classes.secondaryText}><b> API Gateway => AWS Lambda => DynamoDB, S3  </b></span> <br />\r\n                Each method in API Gateway (GET, POST, PUT, DELETE) is mapped to a AWS Lambda function <br />\r\n                Then AWS Lambda makes request to DynamoDB for data<br />\r\n                In order to write to S3 bucket, the app make request to a lambda function to get signedURL, then use that URL to write the file <br />\r\n                So that no AWS Access Key is exposed <br />\r\n                Mapping one API method to one Lambda function give more flexibilities to change each Lambda function without affecting others<br />  \r\n            </Typography>\r\n            <Typography variant = \"h6\">\r\n                Architecture DynamoDB\r\n            </Typography>\r\n            <Typography variant = \"body2\">\r\n                MOVIES table with \r\n                <span className = {classes.secondaryText}><b> year (Number) </b></span> \r\n                as primary partition key and \r\n                <span className = {classes.secondaryText}><b> title (String) </b></span> as primary sort key <br />\r\n                MOVIES table has the following String attributes \r\n                <span className = {classes.secondaryText}><b> year, title, copies, quantity, author </b></span> <br />\r\n                By using year and title as key, we eliminate one column of ID, which is often used for key. In practice, this can remove lots of data redundancy \r\n            </Typography>\r\n            <Typography variant = \"h6\">\r\n                Architecture API Gateway\r\n            </Typography>\r\n            <Typography variant = \"body2\">\r\n                Invoke URL <span className = {classes.mainText}><b><i> https://iov3zsd5oh.execute-api.us-west-2.amazonaws.com/Beta/movies </i></b></span><br />\r\n                Body for methods <br />\r\n                <span className = {classes.secondaryText}><b>GET: </b></span>\r\n                (get all movies): No body needed <br />\r\n                <span className = {classes.secondaryText}><b>POST </b></span>\r\n                (create new movie): Required year and title. Value copies is optional <br />\r\n                <span className = {classes.secondaryText}><b>PUT </b></span>\r\n                (update created movie): Required tableName(\"MOVIES\"), year, title, updateTitle(attribute to update), updateValue <br />\r\n                <span className = {classes.secondaryText}><b>DELETE </b></span>\r\n                (delete movie): Required year and title\r\n            </Typography>\r\n            <Typography variant = \"h6\">\r\n                Architecture S3 bucket\r\n            </Typography>\r\n            <Typography variant = \"body2\">\r\n                An S3 bucket is used to store movies avatar. For now the bucket is publicly accessible <br />\r\n                The frontend make request to write to API Gateway, which then invoke a Lambda function to get a <span className = {classes.secondaryText}><b>signed URL </b></span><br />\r\n                So that <span className = {classes.secondaryText}><b>no AWS Access Key </b></span>is exposed in the frontend <br />\r\n                Then the frontend write using the url and retrieve through public request\r\n            </Typography>\r\n        </div>\r\n    )\r\n}","import { Grid, Paper, Typography, Button, IconButton } from \"@material-ui/core\"\r\nimport { useEffect, useState } from \"react\"\r\nimport ServerlessAddItem from \"./ServerlessAddItem\";\r\nimport ServerlessItem from \"./ServerlessItem\";\r\nimport ServerlessAbout from \"./ServerlessAbout\";\r\nimport ServerlessArchitecture from \"./ServerlessArchitecture\";\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\n\r\nconst styles = {\r\n    largeIcon: {\r\n        width: 1000,\r\n        height: 1000,\r\n    },\r\n};\r\n\r\nexport default function ServerlessIndex() {\r\n    let [movies, setMovies] = useState([])\r\n    let [reload, setReload] = useState(false);\r\n    let [doneLoading, setDoneLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // fetch this URL will get us all the movies from data.Items\r\n        fetch('https://iov3zsd5oh.execute-api.us-west-2.amazonaws.com/Beta/movies', {\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setMovies(data.Items)\r\n            setDoneLoading(true)\r\n        })\r\n    }, [reload])\r\n\r\n    let reloadData = () => {\r\n        setReload(!reload)\r\n        setDoneLoading(false)\r\n    }\r\n    \r\n    return (\r\n        <Paper>\r\n            <ServerlessAbout />\r\n            <ServerlessAddItem reloadData = {reloadData}/>\r\n            <Typography variant = \"h5\">Data</Typography>\r\n            <Button \r\n                startIcon = {<AutorenewIcon />} \r\n                onClick = {reloadData}\r\n            />\r\n            {\r\n                !doneLoading ? \r\n                <Typography variant = \"h1\">Loading...</Typography>\r\n                :\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"space-evenly\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    {\r\n                        movies.map(movie => { \r\n                            return(\r\n                                <ServerlessItem movie = {movie} reloadData = {reloadData}/>\r\n                            )\r\n                        })\r\n                    }\r\n                </Grid>\r\n            }\r\n            <ServerlessArchitecture />\r\n        </Paper>\r\n    )\r\n}","\r\nexport default function Thoughts() {\r\n    return(\r\n        <>\r\n            <h1>Thoughts</h1>\r\n            <h6>These are my thoughts on things I learn about, they are not really organized <br />\r\n                I'm always excited about new technologies and want to learn them\r\n            </h6>\r\n            <p>\r\n               MaterialUI <br />\r\n               It's a very good library and speed up my web development a lot <br />\r\n               Before knowing about MaterialUI, I often write the CSS myself for my React App and that's very time consuming <br />\r\n               Now I can focus on writing my app, state management, fetch API, etc and MaterialUI takes care of the rest <br />\r\n               In addition, what I like about MaterialUI is that it follow Material Design by Google and the result is very consistent\r\n            </p>\r\n            <p>\r\n                React <br />\r\n                After using React for many schools/clubs projects, I have to admit it's one of the best thing for web developer <br />\r\n                Instead of having 3 separate files for html, css and javascript, now you only need one javascript file for one page <br />\r\n                React ecosystem is so vast and help you with various things, like MaterialUI, so that you can spend more time for worrying about state management and overall user experiences of the app <br />\r\n            </p>\r\n            <p>\r\n                AWS <br />\r\n                AWS is a service that has a really big impact on cloud computing and being used by many big companies <br />\r\n                I want to learn more about cloud computing in general, especially AWS and what it is capable of <br />\r\n                I also want to learn other things as well such as Security, AI, ML, etc <br />\r\n                The cost of using AWS services are very cheap and I'm surprised how cheap it actually is <br />\r\n                EC2 instance are very famous and I want to learn how to use it <br />\r\n                The experience working with Serverless Suite was really good, I like how it can host backend on the cloud natively with Lambda function <br />\r\n            </p>\r\n            <p>\r\n                DynamoDB <br />\r\n                DynamoDB is very interesting, instead of having unique key, it allows 2 value to be part of unique key <br />\r\n                This eliminate one column of data and can be very useful, however, there are some benefit of using relational database that this doesn't offer <br />\r\n                Therefore, this is suited more for storing data that can be stored in one single row and not composed of complex parts <br />\r\n                I can see how this is suited for mobile application where each row is a complete user's data \r\n            </p>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport NavBar from './NavBar/NavBar';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch, Route\r\n} from 'react-router-dom'\r\nimport AboutPage from './AboutPage'\r\nimport CartPage from './CartPage/CartPage'\r\nimport HomePage from './HomePage/HomePage'\r\nimport Users from \"./UsersPage\"\r\nimport TestingApp from './TestingApp';\r\nimport ServerlessIndex from './Serverless/ServerlessIndex';\r\nimport Thoughts from \"./Thoughts\";\r\n\r\nexport default function App() {\r\n\r\n    /*\r\n        Need to wrap the entire app inside Router\r\n        so that it wont refresh website\r\n        Specific path comes first otherwise \"/\" will match all of it\r\n    */\r\n    return(\r\n        <Router basename = {process.env.PUBLIC_URL}>\r\n            <NavBar />\r\n\r\n            <div>\r\n                <Switch>\r\n                    <Route path = \"/testingApp\">\r\n                        <TestingApp />\r\n                    </Route>\r\n                    <Route path=\"/about\">\r\n                        <AboutPage />\r\n                    </Route>\r\n                    <Route path=\"/users\">\r\n                        <Users />\r\n                    </Route>\r\n                    <Route path=\"/cart\">\r\n                        <CartPage />\r\n                    </Route>\r\n                    <Route path = \"/serverless\">\r\n                        <ServerlessIndex />\r\n                    </Route>\r\n                    <Route path = \"/thoughts\">\r\n                        <Thoughts />\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <HomePage />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n        \r\n        \r\n    )\r\n}","import React, { useState } from 'react';\r\nimport App from './App';\r\nimport AppContext from './Context/AppContext';\r\n\r\nexport default function AppContextWrapper() {\r\n    let [test, setTest] = useState(\"test\")\r\n    let [cart, setCart] = useState([{id:1, quantity:1}])\r\n    /*\r\n        the cart will have the following structure:\r\n            id and quantity\r\n        \r\n        Pass multiple states to APIContext\r\n        https://stackoverflow.com/questions/57840535/passing-multiple-value-and-setter-pairs-to-context-provider-in-react \r\n    */\r\n   return (\r\n         \r\n        <AppContext.Provider value = {\r\n            {value: [test, setTest]}, \r\n            {value2: [cart, setCart]}\r\n            }\r\n        >\r\n           <App />\r\n       </AppContext.Provider>\r\n   )\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport AppContextWrapper from './Components/AppContextWrapper';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <AppContextWrapper />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}